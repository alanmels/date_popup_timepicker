<?php
/**
 * @file
 * Date popup timepicker.
 */

/**
 * Implements hook_element_info_alter().
 */
function date_popup_timepicker_element_info_alter(&$type) {
  // Add processing to date_popup element to handle module's timepicker.
  $type['date_popup']['#process'][] = 'date_popup_timepicker_date_popup_element_process';
  // Add posibility to pass some options to js plugin
  // like #datepicker_options is used by default.
  // @see date_popup_element_info()
  if (!isset($type['date_popup']['#timepicker_options'])) {
    $type['date_popup']['#timepicker_options'] = array();
  }
}

/**
 * Process callback for the date_popup elements.
 *
 * @see date_popup_timepicker_element_info_alter()
 */
function date_popup_timepicker_date_popup_element_process($element, &$form_state, $form) {
  // No reason to add timepicker if time part is not collected.
  // Also check if used timepicker is module's timepicker (we can't check this
  // in hook_element_info_alter() implementation because of caching).
  if (!empty($element['time']) && $element['#timepicker'] == 'timepicker') {
    // #id should be there...
    $id = $element['time']['#id'];

    $granularity = date_popup_time_granularity($element);
    $settings_default = array(
      'showHours' => in_array('hour', $granularity),
      'showMinutes' => in_array('minute', $granularity),
    );
    $settings = drupal_array_merge_deep($settings_default, $element['#timepicker_options']);
    $js_settings = array();
    $js_settings['datePopup'][$id] = array(
      'func' => 'date_popup_timepicker',
      'settings' => $settings,
    );
    // Override default settings to process on js side.
    // @see date_popup_process_time_part()
    // @see date_popup_js_settings_id()
    drupal_add_js($js_settings, 'setting');

    $element['#attached']['library'][] = array('system', 'ui.core');
    $element['#attached']['library'][] = array('system', 'ui.widget');

    // Add Timepicker library.
    $element['#attached']['libraries_load'][] = array('timepicker');
    $element['#attached']['js'][] = drupal_get_path('module', 'date_popup_timepicker') . "/js/date_popup_timepicker.js";
  }
  return $element;
}

/**
 * Implements hook_libraries_info().
 */
function date_popup_timepicker_libraries_info() {
  $libraries['timepicker'] = array(
    'name' => 'jQuery UI Timepicker',
    'vendor url' => 'https://fgelinas.com/code/timepicker',
    'download url' => 'https://fgelinas.com/code/timepicker/releases/jquery-ui-timepicker-0.3.3.zip',
    'version arguments' => array(
      'file' => 'jquery.ui.timepicker.js',
      'pattern' => '/version\: \"(\d\.\d.\d)\"/',
      'lines' => 43,
    ),
    'files' => array(
      'js' => array(
        'jquery.ui.timepicker.js',
      ),
      'css' => array(
        'jquery.ui.timepicker.css',
      ),
    ),
    'variants' => array(
      'source' => array(
        'files' => array(
          'js' => array(
            'jquery.ui.timepicker.js',
          ),
          'css' => array(
            'jquery.ui.timepicker.css',
          ),
        ),
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter date_popup_settings form.
 */
function date_popup_timepicker_form_date_popup_settings_alter(&$form, &$form_state) {
  $form['date_popup_timepicker']['#options']['timepicker'] = t("jQuery UI Timepicker");
}
